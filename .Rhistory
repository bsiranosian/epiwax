install.packages("ggplot2")
library(ggplot2)
ggplot(dev6, aes(x="GATC")) + geom_histogram(binwidth=.5, colour="black", fill="white")
ggplot(dev6[,'GATC'], aes(x="GATC")) + geom_histogram(binwidth=.5, colour="black", fill="white")
ggplot(dev4[,'GATC'], aes(x="GATC")) + geom_histogram(binwidth=.5, colour="black", fill="white")
ggplot(as.data.frame(dev4[,'GATC']), aes(x="GATC")) + geom_histogram(binwidth=.5, colour="black", fill="white")
as.data.frame(dev4[,'GATC'])
head(as.data.frame(dev4[,'GATC']))
ggplot(as.data.frame(dev4[,'GATC']), aes(x=1)) + geom_histogram(binwidth=.5, colour="black", fill="white")
ggplot(as.data.frame(dev4[,'GATC']), aes(x=dev4[,'GATC'])) + geom_histogram(binwidth=.5, colour="black", fill="white")
ggplot(as.data.frame(dev4[,'GATC']), aes(x=dev4[,'GATC'])) + geom_histogram(binwidth=.1, colour="black", fill="white")
ggtitle("GATC usage deviation")
ggplot(as.data.frame(dev4[,'GATC']), aes(x=dev4[,'GATC'])) + geom_histogram(binwidth=.1, colour="black", fill="white") +
ggtitle("GATC usage deviation")
ggplot(as.data.frame(dev4[,'GATC']), aes(x=dev4[,'GATC'])) + geom_histogram(binwidth=.1, colour="black", fill=col1 +
ggtitle("GATC usage deviation")
ggplot(as.data.frame(dev4[,'GATC']), aes(x=dev4[,'GATC'])) + geom_histogram(binwidth=.1, colour="black", fill=col1) +
ggtitle("GATC usage deviation")
ggplot(as.data.frame(dev4[,'GATC']), aes(x=dev4[,'GATC'])) + geom_histogram(binwidth=.1, colour="black", fill=col1) +
ggtitle("GATC usage deviation")
ggplot(as.data.frame(dev4[,'GATC']), aes(x=dev4[,'GATC'])) + geom_histogram(binwidth=.1, colour="black", fill=col2) +
ggtitle("GATC usage deviation")
ggplot(as.data.frame(dev4[,'GATC']), aes(x=dev4[,'GATC'])) + geom_histogram(binwidth=.1, colour="black", fill=col3) +
ggtitle("GATC usage deviation")
col3a=rgb(67/255,105/255,189/255,0.5)
ggplot(as.data.frame(dev4[,'GATC']), aes(x=dev4[,'GATC'])) + geom_histogram(binwidth=.1, colour="black", fill=col3a) +
ggtitle("GATC usage deviation")
ggtitle("GATC usage deviation") +xlab('Tetranucleotide usage deviation') + ylab('Number of phage')
ggplot(as.data.frame(dev4[,'GATC']), aes(x=dev4[,'GATC'])) + geom_histogram(binwidth=.1, colour="black", fill=col3a) +
ggtitle("GATC usage deviation") +xlab('Tetranucleotide usage deviation') + ylab('Number of phage')
ggplot(as.data.frame(dev6[,'GATC']), aes(x=dev4[,'GGATCC'])) + geom_histogram(binwidth=.1, colour="black", fill=col3a) +
ggtitle("GATC usage deviation") +xlab('Tetranucleotide usage deviation') + ylab('Number of phage')
ggplot(as.data.frame(dev6[,'GGATCC']), aes(x=dev6[,'GGATCC'])) + geom_histogram(binwidth=.1, colour="black", fill=col3a) +
ggtitle("GATC usage deviation") +xlab('Tetranucleotide usage deviation') + ylab('Number of phage')
ggplot(as.data.frame(dev6[,'GGATCC']), aes(x=dev6[,'GGATCC'])) + geom_histogram(binwidth=.1, colour="black", fill=col3a) +
ggtitle("GATC usage deviation") +xlab('Hexanucleotide usage deviation') + ylab('Number of phage')
ggplot(as.data.frame(dev6[,'GGATCC']), aes(x=dev6[,'GGATCC'])) + geom_histogram(binwidth=.1, colour="black", fill=col3a) +
ggtitle("GGATCC usage deviation") +xlab('Hexanucleotide usage deviation') + ylab('Number of phage')
clusters <- sapply(rownames(dev4), function(i) strsplit(x=strsplit(i,split="\\(")[[1]][2], split='\\)')[[1]][1])
clusters
hist(dev6[clusters=='B3',"GGATCC"], breaks=50)
hist(dev6[clusters!='B3',"GGATCC"], breaks=50)
dev6[dev6[,"GGATCC"]>4,"GGATTCC"]
dev6[,"GGATCC"]>4
dev6[dev6[,"GGATCC"]>4,"GGATTCC"]
dev6[dev6[,"GGATCC"]>4,"GGATCC"]
clusters[dev6[,"GGATCC"]>4]
clusters["Q"]
clusters[clusters=="Q"]
clusters[dev6[,"GGATCC"]>3 & dev6[,"GGATCC"] <4]
col2
all <- as.matrix(read.table('GitHub/tango/data/with_reverse_complement/all_phages_TUD_4_RC.tsv'))
d_all <- as.matrix(dist(all))
write.table(d_all, file='GitHub/tango/data/with_reverse_complement/all_TUD_distance.tsv', sep='\t', quote=F)
library(ape)
install.packages("ape")
ape
library(ape)
all <- read.table(file='GitHub/tango/data/with_reverse_complement/all_TUD_distance.tsv', sep='\t')
plot(all)
plot(all)
plot(all)
dev.off()
plot(all)
par(mar=c(1,1,1,1))
plot(all)
dev.new(width=10, height=10)
plot(all)
dev.off()
pdf('test_nj.pdf')
plot(all)
pdf('test_nj.pdf', width=20, height=20)
plot(all)
par(mar=c(1,1,1,1))
plot(all)
pdf('test_nj.pdf', width=50, height=50)
par(mar=c(1,1,1,1))
plot(all)
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
pdf('test_nj.pdf', width=50, height=50)
par(mar=c(1,1,1,1))
plot(all)
pall <- nj(all)
pall <- nj(,X=)
pall <- nj(all)
pall <- njs(all)
all <- as.matrix(read.table('GitHub/tango/data/with_reverse_complement/all_phages_TUD_4_RC.tsv'))
d_all <- as.matrix(dist(all))
plot(d_all)
dev.off()
plot(d_all)
njall <- nj(d_all)
plot(d_all)
plot(njall)
pdf('test_nj.pdf', width=50, height=50)
plot(njall)
dev.off()
dev.off()
all <- as.matrix(read.table('GitHub/tango/data/with_reverse_complement/all_phages_TUD_4_RC_num.tsv'))
d_all <- as.matrix(dist(all))
write.table(d_all, file='GitHub/tango/data/with_reverse_complement/all_TUD_distance_num.tsv', sep='\t', quote=F)
all <- as.matrix(read.table('GitHub/tango/data/with_reverse_complement/all_phages_TUD_4_RC_NEW.tsv'))
all <- as.matrix(read.table('GitHub/tango/data/with_reverse_complement/all_phages_TUD_4_RC_NEW.tsv'))
d_all <- as.matrix(dist(all))
write.table(d_all, file='GitHub/tango/data/with_reverse_complement/all_TUD_distance_NEW.tsv', sep='\t', quote=F)
install.packages("robCompositions")
library(robCompositions)
help(robCompositions)
setwd("~/GitHub/epiwax")
fal <- as.matrix(read.table('distribution_data//fatty_alcohol.txt'))
fal <- as.matrix(read.table('distribution_data//fatty_alcohol.txt', header=T))
fal <- as.matrix(read.table('distribution_data//fatty_alcohol.txt',header=T))
fal <- as.matrix(read.delim('distribution_data//fatty_alcohol.txt',header=T))
fal
fal <- as.matrix(read.delim('distribution_data//fatty_alcohol.txt',header = T))
fal
fal <- as.matrix(read.table('distribution_data//fatty_alcohol.txt',header = T))
fal
fal <- as.matrix(read.table('distribution_data//fatty_alcohol.txt',header = T))
fal
fal_conc <- as.matrix(read.table('distribution_data//fatty_alcohol.txt',header = T))
fal <- apply(fal, 2, function(x) x/colSums(x))
fal <- apply(fal, 2, function(x) x/su(x)m)
fal <- apply(fal, 2, function(x) x/sum(x))
fal
colSums(fal)
d <- dist(t(fal))
fit <- cmdscale(d,eig=TRUE, k=8)
fit
x <- fit$points[,1]
y <- fit$points[,2]
plot(x, y, xlab="Coordinate 1", ylab="Coordinate 2",
main="Metric  MDS",	type="n")
text(x, y, labels = row.names(mydata), cex=.7)
text(x, y, labels = row.names(fal), cex=.7)
text(x, y, labels = row.names(t(fal), cex=.7)
text(x, y, labels = row.names(t(fal)), cex=.7)
x <- fit$points[,1]
y <- fit$points[,2]
plot(x, y, xlab="Coordinate 1", ylab="Coordinate 2",
main="Metric  MDS",	type="n")
text(x, y, labels = row.names(t(fal)), cex=.7)
fatl <- t(fal)
d
plot(d)
hclust(d)
plot(hclust(d))
fatl <- t(fal)
#load FA
fa_conc <- as.matrix(read.table('distribution_data//fatty_acid.txt', header=T))
fa <- apply(fa, 2, function(x) x/sum(x))
fat <- t(fa)
fal_conc <- as.matrix(read.table('distribution_data//fatty_alcohol.txt',header = T))
fal <- apply(fal_conc, 2, function(x) x/sum(x))
fatl <- t(fal)
#load FA
fa_conc <- as.matrix(read.table('distribution_data//fatty_acid.txt', header=T))
fa <- apply(fa_conc, 2, function(x) x/sum(x))
fat <- t(fa)
alk_conc <- as.matrix(read.table('distribution_data//fatty_acid.txt', header=T))
alk <- apply(alk_conc, 2, function(x) x/sum(x))
alkt <- t(alk)
plot(hclust(dist(alk)))
plot(hclust(dist(alkt)))
plot(hclust(dist(fat)))
alk_conc <- as.matrix(read.table('distribution_data//alkane.txt', header=T))
plot(hclust(dist(alkt)))
alk <- apply(alk_conc, 2, function(x) x/sum(x))
alkt <- t(alk)
# Classical MDS
plot(hclust(dist(alkt)))
alk[,1:5]
alkt[1:5,]
plot(hclust(dist(alkt[,3:])))
plot(hclust(dist(alkt[,3:10])))
plot(hclust(dist(alkt[,3:9])))
plot(hclust(dist(fat)))
plot(hclust(dist(t(fat))))
plot(hclust(dist(t(fal))))
plot(hclust(dist(falt)))
falt <- t(fal)
plot(hclust(dist(falt)))
library(robCompositions)
ternaryDiag(falt[,1:3])
fal_p1 <- pcaCoDa(falt)
p1
fal_p1
plot(fal_p1)
fa_p1 <- pcaCoDa(fat)
fat
plot(fa_p1)
fa_p1 <- pcaCoDa(fat)
colnames(fat)
int(colnames(fat))
as.int(colnames(fat))
as.integer(colnames(fat))
21/2
21//2
21%2
range(10, 17)
range(10:17)
10:17
(10:17)(2)
(10:17)*2
a<- (10:17)*2
colnames(fat)
as.integer(colnames(fat))
as.integer(colnames(fat)) in a
as.integer(colnames(fat))[a[]
as.integer(colnames(fat))[a]
as.integer(colnames(fat))
as.integer(colnames(fat))==a
as.integer(colnames(fat))
as.integer(colnames(fat))[1,2,3]
as.integer(colnames(fat))[[1,2,3]]
fa
# trying robust PCA on compositional data
# percent compoistion of varying component classes in wax samples.
setwd("~/GitHub/epiwax")
library(robCompositions)
# load FAL
fal_conc <- as.matrix(read.table('distribution_data//fatty_alcohol.txt',header = T))
falt <- apply(fal_conc, 2, function(x) x/sum(x))
fal <- t(falt)
#load FA
fa_conc <- as.matrix(read.table('distribution_data//fatty_acid.txt', header=T))
fat <- apply(fa_conc, 2, function(x) x/sum(x))
fa <- t(fat)
fa_even <- fa[,colnames(fa)]
#load ALK
alk_conc <- as.matrix(read.table('distribution_data//alkane.txt', header=T))
alkt <- apply(alk_conc, 2, function(x) x/sum(x))
alk <- t(alkt)
# Classical MDS
# N rows (objects) x p columns (variables)
# each row identified by a unique row name
d <- dist(fal) # euclidean distances between the rows
fit <- cmdscale(d,eig=TRUE, k=2) # k is the number of dim
fit # view results
# plot solution
x <- fit$points[,1]
y <- fit$points[,2]
plot(x, y, xlab="Coordinate 1", ylab="Coordinate 2",
main="Metric  MDS",	type="n")
text(x, y, labels = row.names(t(fal)), cex=.7)
#### starting to try out robCompositions
ternaryDiag(fal[,1:3])
#pca
fal_p1 <- pcaCoDa(fal)
plot(fal_p1)
fa_p1 <- pcaCoDa(fa)
plot(fa_p1)
fal_p1 <- pcaCoDa(fal)
plot(fal_p1)
fa
5 in [1,2,5]
5 %in% [1,2,5]
5%in%[1,2,5]
5%in%c(1,2,5)
fa[,as.integer(colnames(fa)) %in% c(20,22,24,26,28,30,32,34)]
fa.subset <- fa[,as.integer(colnames(fa)) %in% c(20,22,24,26,28,30,32,34)]
fa.subset_p1 <- pcaCoDa(fa.subset)
plot(fa.subset_p1)
alk
alk_p1 <- pcaCoDa(alk)
alk.subset <- alk[, as.integer(colnames(alk)) %in% c(25,27,29,31,33)]
alk.subset_p1 <- pcaCoDa(alk.subset)
plot(alk.subset_p1)
alk.subset <- alk[, as.integer(colnames(alk)) %in% c(25,27,29,31)]
alk.subset_p1 <- pcaCoDa(alk.subset)
plot(alk.subset_p1)
veg.fa <- as.matrix(read.table('distribution_data//veg_acid.txt',header = T))
veg.fa
seq(22,34)
veg.fa <- as.matrix(read.table('distribution_data//veg_acid.txt',header = T,col.names=seq(22,34)))
veg.fa
colnames(veg.da)
colnames(veg.fa)
veg.fa <- as.matrix(read.table('distribution_data//veg_acid.txt',header = T,check.names = F)
veg.fa <- as.matrix(read.table('distribution_data//veg_acid.txt',header = T,check.names = F))
veg.fa <- as.matrix(read.table('distribution_data//veg_acid.txt',header = T,check.names = F))
veg.fa
veg.fal <- as.matrix(read.table('distribution_data//veg_alcohol.txt',header = T,check.names = F))
veg.alk <- as.matrix(read.table('distribution_data//veg_alkane.txt',header = T,check.names = F))
veg.fa
veg.fal
veg.fal <- as.matrix(read.table('distribution_data//veg_alcohol.txt',header = T,check.names = F))
veg.fal
veg.fal <- as.matrix(read.table('distribution_data//veg_alcohol.txt',header = T,check.names = F))
veg.fal
veg.alk
rowsums(veg.alk)
rowSums(veg.alk)
veg.fa/rowSums(veg.fa)
veg.fa <- veg.fa/rowSums(veg.fa)
veg.fal <- veg.fal/rowSums(veg.fal)
veg.alk <- veg.alk/rowSums(veg.alk)
veg.alk
veg.fa.p1 <- pcaCoDa(veg.fa)
veg.fa[,c(1,2,3)]
veg.da
veg.fa
veg.fa <- veg.fa[,c(1,3,5,7,9,11,13)]
veg.fa <- veg.fa/rowSums(veg.fa)
veg.fa.p1 <- pcaCoDa(veg.fa)
veg.fa
fa
fal_conc <- as.matrix(read.table('distribution_data//fatty_alcohol.txt',header = T))
fal_conc
fa_conc <- as.matrix(read.table('distribution_data//fatty_acid.txt', header=T))
fa_conc
fal_conc
fal_conc <- as.matrix(read.table('distribution_data//fatty_alcohol.txt',header = T))
fal_conc
fal_conc <- as.matrix(read.table('distribution_data//fatty_alcohol.txt',header = T))
fal <- apply(fal_conc, 2, function(x) x/sum(x))
fal_conc <- as.matrix(read.table('distribution_data//transect_alcohol.txt',header = T))
fal <- fal.conc/colSums(fal.conc)
fal.conc <- as.matrix(read.table('distribution_data//transect_alcohol.txt',header = T))
fal <- fal.conc/colSums(fal.conc)
fal
fal <- fal.conc/rowSums(fal.conc)
rowSums(fal)
fal
barplot(fal[1,])
barplot(fal[1:5,])
fal.conc <- as.matrix(read.table('distribution_data//transect_alcohol.txt',header = T,check.names = F))
fal <- fal.conc/rowSums(fal.conc)
#load FA
fa.conc <- as.matrix(read.table('distribution_data//transect_acid.txt', header=T,check.names = F))
fa.conc
fa.conc.even <- fa.conc[,c(1,3,5,7,9,11,13,15)]
fa.conc.even <- fa.conc[,c(1,3,5,7,9,11,13,15)]
fa.even <- fa.conc.even/rowSums(fa.conc.even)
alk.onc
alk.conc <- as.matrix(read.table('distribution_data//transect_alkane.txt', header=T,check.names = F))
alk.conc
alk.conc.odd <- alk.conc[,1,3,5,7,9]
alk.conc.odd <- alk.conc[,c(1,3,5,7,9)]
alk.conc.odd
alk.odd <- alk.conc.odd/rowSums(alk.conc.odd)
fal.even <- fal.conc/rowSums(fal.conc)
fal.even
plot(dist(fal.evem))
plot(dist(fal.even))
hclust(dist(fal.even))
plot(hclust(dist(fal.even)))
plot(hclust(dist(fa.even)))
plot(hclust(dist(alk.even)))
plot(hclust(dist(alk.odd)))
par(mfrow = c(4,5))
barplot(fal.even[1,])
barplot(fal.even[s,])
barplot(fal.even[2,])
for (i in seq(1,20)){}
for (i in seq(1,20)){
barplot(fal.even[i,])
}
par(mfrow=c(4,5))
for (i in seq(1,20)){
barplot(fal.even[i,])
}
for (i in seq(1,20)){
barplot(fal.even[i,], main = i)
}
par(mfrow=c(4,5), mai = c(0.5,0.5,0.5,0.5))
for (i in seq(1,20)){
barplot(fal.even[i,], main = i)
}
par(mfrow=c(4,5), mai = c(0.25,0.25,0.25,0.25))
for (i in seq(1,20)){
barplot(fal.even[i,], main = i)
}
par(mfrow=c(4,5), mai = c(0.35,0.35,0.35,0.35))
for (i in seq(1,20)){
barplot(fal.even[i,], main = i)
}
heatmap(as.matrix(dist(fal.even)))
heatmap(as.matrix(dist(fal.even)),Rowv = NA, COlv=NA)
heatmap(as.matrix(dist(fal.even)),Rowv = NA, COlv=NA)
heatmap(as.matrix(dist(fal.even)),Rowv = NA, Colv=NA)
heatmap(as.matrix(dist(fal.even)),Rowv = NA, Colv = NA)
for (i in seq(1,20)){
barplot(fa.even[i,], main = i)
}
par(mfrow=c(4,5), mai = c(0.35,0.35,0.35,0.35), mar=c(1,1,1,1))
for (i in seq(1,20)){
barplot(fal.even[i,], main = i)
}
par(mfrow=c(4,5), mai = c(0.35,0.35,0.35,0.35), mar=c(2,2,2,2))
for (i in seq(1,20)){
barplot(fal.even[i,], main = i)
}
par(mfrow=c(4,5), mai = c(0.35,0.35,0.35,0.35), mar=c(1,2,2,2))
for (i in seq(1,20)){
barplot(fal.even[i,], main = i)
}
pdf('figures//component_distributions/transect_alcohol.pdf')
par(mfrow=c(4,5), mai = c(0.35,0.35,0.35,0.35), mar=c(1,2,2,2))
for (i in seq(1,20)){
barplot(fal.even[i,], main = i)
}
dev.off()
pdf('figures//component_distributions/transect_alcohol.pdf')
par(mfrow=c(4,5), mai = c(0.35,0.35,0.35,0.35), mar=c(1,2,2,2))
for (i in seq(1,20)){
barplot(fal.even[i,], main = i)
}
dev.off()
pdf('figures//component_distributions/transect_alcohol.pdf',width=8.5, height=11)
par(mfrow=c(4,5), mai = c(0.35,0.35,0.35,0.35), mar=c(1,2,2,2))
for (i in seq(1,20)){
barplot(fal.even[i,], main = i)
}
dev.off()
pdf('figures//component_distributions/transect_alcohol.pdf',width=8.5, height=11)
par(mfrow=c(4,5), mai = c(0.35,0.35,0.35,0.35), mar=c(2,2,2,2))
for (i in seq(1,20)){
barplot(fal.even[i,], main = i)
}
dev.off()
par(mfrow=c(5,4), mai = c(0.35,0.35,0.35,0.35), mar=c(2,2,2,2))
for (i in seq(1,20)){
barplot(fal.even[i,], main = i)
}
dev.off()
# FAL EVEN
pdf('figures//component_distributions/transect_alcohol.pdf',width=8.5, height=11)
par(mfrow=c(5,4), mai = c(0.35,0.35,0.35,0.35), mar=c(2,2,2,2))
for (i in seq(1,20)){
barplot(fal.even[i,], main = i)
}
dev.off()
pdf('figures//component_distributions/transect_alcohol.pdf',width=8.5, height=11)
par(mfrow=c(5,4), mai = c(0.45,0.45,0.45,0.45), mar=c(2,2,2,2))
for (i in seq(1,20)){
barplot(fal.even[i,], main = i)
}
dev.off()
pdf('figures//component_distributions/transect_alcohol.pdf',width=8.5, height=11)
par(mfrow=c(5,4), mai = c(0.45,0.45,0.45,0.45), mar=c(2,2,2,2))
for (i in seq(1,20)){
barplot(fal.even[i,], main = i)
}
dev.off()
pdf('figures//component_distributions/transect_acid.pdf',width=8.5, height=11)
par(mfrow=c(5,4), mai = c(0.45,0.45,0.45,0.45), mar=c(2,2,2,2))
for (i in seq(1,20)){
barplot(fa.even[i,], main = i)
}
dev.off()
# ALK ODD
pdf('figures//component_distributions/transect_alkane.pdf',width=8.5, height=11)
par(mfrow=c(5,4), mai = c(0.45,0.45,0.45,0.45), mar=c(2,2,2,2))
for (i in seq(1,20)){
barplot(alk.odd[i,], main = i)
}
dev.off()
dev.off()
heat(as.matrix(dist(fal.even)))
heatmap(as.matrix(dist(fal.even)))
par(mfrow=c(1,3))
heatmap(as.matrix(dist(fal.even)))
heatmap(as.matrix(dist(fa.even)))
heatmap(as.matrix(dist(alk.odd)))
par(mfrow=c(3,1))
heatmap(as.matrix(dist(fal.even)))
par(mfrow=c(2,2))
heatmap(as.matrix(dist(fal.even)))
par(mfrow=c(2,2))
heatmap(as.matrix(dist(fal.even)))
heatmap(as.matrix(dist(fa.even)))
heatmap(as.matrix(dist(alk.odd)))
heatmap(as.matrix(dist(fal.even)),main = "alcohol")
par()
par(mfrow=c(2,2))
heatmap(as.matrix(dist(fal.even)),main = "alcohol")
heatmap(as.matrix(dist(fa.even)), main= "acid")
heatmap(as.matrix(dist(alk.odd)), main= "alkane")
d <- dist(fa.even) # euclidean distances between the rows
d
fa.even
fit <- cmdscale(d,eig=TRUE, k=8) # k is the number of dim
fit # view results
# plot solution
x <- fit$points[,1]
y <- fit$points[,2]
plot(x, y, xlab="Coordinate 1", ylab="Coordinate 2",
main="Metric  MDS",	type="n")
text(x, y, labels = row.names(t(fal)), cex=.7)
text(x, y, labels = row.names(fa.even)), cex=.7)
plot(x, y, xlab="Coordinate 1", ylab="Coordinate 2",
main="Metric  MDS",	type="n")
text(x, y, labels = row.names(fa.even)), cex=.7)
text(x, y, labels = row.names(fa.even), cex=.7)
dev.off()
plot(x, y, xlab="Coordinate 1", ylab="Coordinate 2",
main="Metric  MDS",	type="n")
text(x, y, labels = row.names(fa.even), cex=.7)
fa_p1 <- pcaCoDa(fa.even)
plot(fa_p1)
fal.even.p1 <- pcaCoDa(fal.even)
plot(fal.even.p1)
alk.odd.p1 <- pcaCoDa(alk.odd)
plot(alk.odd.p1)
alk.odd.p1 <- pcaCoDa(alk.odd)
plot(alk.odd.p1)
alk.odd.p1
